# ----------------------------------------
# イミュータブルオブジェクトとミュータブルオブジェクト
# ----------------------------------------
# - Rubyのオブジェクトは「イミュータブル（変更不可）」と「ミュータブル（変更可能）」に分類される。
# - イミュータブルなオブジェクトは変更できず、変更が必要な場合は新しいオブジェクトが作成される。
# - ミュータブルなオブジェクトはその場で変更可能。
# - `freeze` を使うことでミュータブルなオブジェクトをイミュータブルにできる。

# ----------------------------------------
# 1. イミュータブルオブジェクト
# ----------------------------------------

# 数値（Integer, Float）はイミュータブル
num1 = 10
num2 = num1
num2 += 5  # num2に新しい値を代入（num1には影響なし）

puts num1  # => 10
puts num2  # => 15（新しいオブジェクトが作られる）

# シンボル（Symbol）はイミュータブル
sym1 = :ruby
sym2 = sym1

puts sym1.object_id == sym2.object_id  # => true（同じオブジェクトが使われる）

# `freeze` されたオブジェクトは変更不可
str = "hello".freeze
# str << " world"  # => エラー (RuntimeError: can't modify frozen String)

# ----------------------------------------
# 2. ミュータブルオブジェクト
# ----------------------------------------

# 文字列（String）はミュータブル
str1 = "hello"
str2 = str1
str1 << " world"  # `str1` を変更（破壊的変更）

puts str1  # => "hello world"
puts str2  # => "hello world"（同じオブジェクトなので変更が影響する）

# 配列（Array）はミュータブル
arr1 = [1, 2, 3]
arr2 = arr1
arr1.push(4)  # `arr1` に要素を追加

puts arr1.inspect  # => [1, 2, 3, 4]
puts arr2.inspect  # => [1, 2, 3, 4]（同じオブジェクトなので変更が影響する）

# ハッシュ（Hash）もミュータブル
hash1 = { a: 1, b: 2 }
hash2 = hash1
hash1[:c] = 3  # `hash1` に新しいキーを追加

puts hash1.inspect  # => {:a=>1, :b=>2, :c=>3}
puts hash2.inspect  # => {:a=>1, :b=>2, :c=>3}（同じオブジェクトなので変更が影響する）

# ----------------------------------------
# 3. `dup` / `clone` によるオブジェクトの複製
# ----------------------------------------
# - `dup` は浅いコピーを作成する。
# - `clone` は `freeze` の状態もコピーする。

arr1 = [1, 2, 3]
arr2 = arr1.dup  # 新しいオブジェクトを作成
arr3 = arr1.clone  # `freeze` 状態もコピー

arr1.push(4)  # `arr1` のみ変更

puts arr1.inspect  # => [1, 2, 3, 4]
puts arr2.inspect  # => [1, 2, 3]（コピー元とは独立）
puts arr3.inspect  # => [1, 2, 3]（コピー元とは独立）

# ----------------------------------------
# 4. `freeze` を活用してオブジェクトをイミュータブルにする
# ----------------------------------------
# - `freeze` を使うと、そのオブジェクトを変更不可にできる。

arr = [1, 2, 3].freeze
# arr << 4  # => エラー (RuntimeError: can't modify frozen Array)

hash = { a: 1, b: 2 }.freeze
# hash[:c] = 3  # => エラー (RuntimeError)

# ----------------------------------------
# 5. `frozen?` でオブジェクトが凍結されているか確認
# ----------------------------------------
str = "immutable".freeze
puts str.frozen?  # => true（凍結されている）

arr = [1, 2, 3]
puts arr.frozen?  # => false（凍結されていない）

# ----------------------------------------
# 6. まとめ
# ----------------------------------------

puts "\n--- まとめ ---"
puts "Integer: イミュータブル"
puts "Float: イミュータブル"
puts "Symbol: イミュータブル"
puts "String: ミュータブル（freeze 可能）"
puts "Array: ミュータブル（freeze 可能）"
puts "Hash: ミュータブル（freeze 可能）"
